{
    "$schema": "http://json-schema.org/draft-04/schema",
    "name": "glTFMeshPrimitive",
    "type": "object",
    "description": "Geometry to be rendered with the given material.",
    "base": "glTFProperty",
    "properties": {
        "attributes": {
            "type": "map<string,glTFid<glTFAccessor>>",
            "description": "A dictionary object, where each key corresponds to mesh attribute semantic and each value is the index of the accessor containing attribute's data.",
            "minProperties": 1
        },
        "indices": {
            "type": "glTFid<glTFAccessor>",
            "description": "The index of the accessor that contains the indices.",
            "gltf_detailedDescription": "The index of the accessor that contains mesh indices.  When this is not defined, the primitives should be rendered without indices using `drawArrays()`.  When defined, the accessor must contain indices: the `bufferView` referenced by the accessor should have a `target` equal to 34963 (ELEMENT_ARRAY_BUFFER); `componentType` must be 5121 (UNSIGNED_BYTE), 5123 (UNSIGNED_SHORT) or 5125 (UNSIGNED_INT), the latter may require enabling additional hardware support; `type` must be `\"SCALAR\"`. For triangle primitives, the front face has a counter-clockwise (CCW) winding order."
        },
        "material": {
            "type": "glTFid<glTFMaterial>",
            "description": "The index of the material to apply to this primitive when rendering."
        },
        "mode": {
            "description": "The type of primitives to render.",
            "default": "Triangles",
            "gltf_detailedDescription": "The type of primitives to render. All valid values correspond to WebGL enums.",
            "type": "glTFMeshPrimitiveMode",
            "is_enum": true,
            "item": "int"
        },
        "targets": {
            "type": "vector<map<string, glTFid<glTFAccessor>>>",
            "description": "An array of Morph Targets, each  Morph Target is a dictionary mapping attributes (only `POSITION`, `NORMAL`, and `TANGENT` supported) to their deviations in the Morph Target.",
            "items": {
                "type": "object",
                "minProperties": 1,
                "additionalProperties": {
                    "$ref": "glTFid"
                },
                "description": "A dictionary object specifying attributes displacements in a Morph Target, where each key corresponds to one of the three supported attribute semantic (`POSITION`, `NORMAL`, or `TANGENT`) and each value is the index of the accessor containing the attribute displacements' data.",
                "gltf_id_type": "accessor"
            },
            "minItems": 1
        }
    },
    "enums": [
        {
            "description": "Values for glTFMeshPrimitive::mode",
            "name": "glTFMeshPrimitiveMode",
            "item": "int",
            "values": [
                {
                    "enum": 0,
                    "label": "Points"
                },
                {
                    "enum": 1,
                    "label": "Lines"
                },
                {
                    "enum": 2,
                    "label": "LineLoop"
                },
                {
                    "enum": 3,
                    "label": "LineStrip"
                },
                {
                    "enum": 4,
                    "label": "Triangles"
                },
                {
                    "enum": 5,
                    "label": "TriangleStrip"
                },
                {
                    "enum": 6,
                    "label": "TriangleFan"
                }
            ]
        }
    ],
    "gltf_webgl": "`drawElements()` and `drawArrays()`",
    "required": [ "attributes" ]
}
