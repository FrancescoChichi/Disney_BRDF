{
    "$schema": "http://json-schema.org/draft-04/schema",
    "name": "glTFAnimationSampler",
    "type": "object",
    "description": "Combines input and output accessors with an interpolation algorithm to define a keyframe graph (but not its target).",
    "base": "glTFProperty",
    "properties": {
        "input": {
            "type": "glTFid<glTFAccessor>",
            "description": "The index of an accessor containing keyframe input values, e.g., time.",
            "gltf_detailedDescription": "The index of an accessor containing keyframe input values, e.g., time. That accessor must have componentType `FLOAT`. The values represent time in seconds with `time[0] >= 0.0`, and strictly increasing values, i.e., `time[n + 1] > time[n]`."
        },
        "interpolation": {
            "description": "Interpolation algorithm.",
            "default": "Linear",
            "gltf_detailedDescription": "Interpolation algorithm.",
            "type": "glTFAnimationSamplerInterpolation",
            "is_enum": true
        },
        "output": {
            "type": "glTFid<glTFAccessor>",
            "description": "The index of an accessor, containing keyframe output values.",
            "gltf_detailedDescription": "The index of an accessor containing keyframe output values. When targeting TRS target, the `accessor.componentType` of the output values must be `FLOAT`. When targeting morph weights, the `accessor.componentType` of the output values must be `FLOAT` or normalized integer where each output element stores values with a count equal to the number of morph targets."
        }
    },
    "enums": [
        {
            "description": "Values for glTFAnimationSampler::interpolation",
            "name": "glTFAnimationSamplerInterpolation",
            "item": "string",
            "values": [
                {
                    "enum": "LINEAR",
                    "label": "Linear",
                    "item": "string",
                    "description": "The animated values are linearly interpolated between keyframes. When targeting a rotation, spherical linear interpolation (slerp) should be used to interpolate quaternions. The number output of elements must equal the number of input elements.",
                    "value": 0
                },
                {
                    "enum": "STEP",
                    "label": "Step",
                    "description": "The animated values remain constant to the output of the first keyframe, until the next keyframe. The number of output elements must equal the number of input elements.",
                    "value": 1
                },
                {
                    "enum": "CATMULLROMSPLINE",
                    "label": "CatmullRomSpline",
                    "description": "The animation's interpolation is computed using a uniform Catmull-Rom spline. The number of output elements must equal two more than the number of input elements. The first and last output elements represent the start and end tangents of the spline. There must be at least four keyframes when using this interpolation.",
                    "value": 2
                },
                {
                    "enum": "CUBICSPLINE",
                    "label": "CubicSpline",
                    "description": "The animation's interpolation is computed using a cubic spline with specified tangents. The number of output elements must equal three times the number of input elements. For each input element, the output stores three elements, an in-tangent, a spline vertex, and an out-tangent. There must be at least two keyframes when using this interpolation.",
                    "value": 3
                }
            ]

        }
    ],
    "required": [ "input", "output" ]
}
