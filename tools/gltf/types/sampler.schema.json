{
    "$schema": "http://json-schema.org/draft-04/schema",
    "name": "glTFSampler",
    "type": "object",
    "description": "Texture sampler properties for filtering and wrapping modes.",
    "base": "glTFChildOfRootProperty",
    "properties": {
        "magFilter": {
            "description": "Magnification filter.",
            "gltf_detailedDescription": "Magnification filter.  Valid values correspond to WebGL enums: `9728` (NEAREST) and `9729` (LINEAR).",
            "gltf_webgl": "`texParameterf()` with pname equal to TEXTURE_MAG_FILTER",
            "type": "glTFSamplerMagFilter",
            "is_enum": true
        },
        "minFilter": {
            "description": "Minification filter.",
            "gltf_detailedDescription": "Minification filter.  All valid values correspond to WebGL enums.",
            "gltf_webgl": "`texParameterf()` with pname equal to TEXTURE_MIN_FILTER",
            "type": "glTFSamplerMinFilter",
            "is_enum": true
        },
        "wrapS": {
            "description": "s wrapping mode.",
            "default": "Repeat",
            "gltf_detailedDescription": "s wrapping mode.  All valid values correspond to WebGL enums.",
            "gltf_webgl": "`texParameterf()` with pname equal to TEXTURE_WRAP_S",
            "type": "glTFSamplerWrapS",
            "is_enum": true
        },
        "wrapT": {
            "description": "t wrapping mode.",
            "default": "Repeat",
            "gltf_detailedDescription": "t wrapping mode.  All valid values correspond to WebGL enums.",
            "gltf_webgl": "`texParameterf()` with pname equal to TEXTURE_WRAP_T",
            "type": "glTFSamplerWrapT",
            "is_enum": true
        }
    },
    "enums": [
        {
            "description": "Values for glTFSampler::magFilter",
            "name": "glTFSamplerMagFilter",
            "item": "int",
            "values": [
                {
                    "enum": 9728,
                    "label": "Nearest"
                },
                {
                    "enum": 9729,
                    "label": "Linear"
                }
            ]
        },
        {
            "description": "Values for glTFSampler::minFilter",
            "name": "glTFSamplerMinFilter",
            "item": "int",
            "values": [
                {
                    "enum": 9728,
                    "label": "Nearest"
                },
                {
                    "enum": 9729,
                    "label": "Linear"
                },
                {
                    "enum": 9984,
                    "label": "NearestMipmapNearest"
                },
                {
                    "enum": 9985,
                    "label": "LinearMipmapNearest"
                },
                {
                    "enum": 9986,
                    "label": "NearestMipmapLinear"
                },
                {
                    "enum": 9987,
                    "label": "LinearMipmapLinear"
                }
            ]
        },
        {
            "description": "glTFSampler::wrapS",
            "name": "glTFSamplerWrapS",
            "item": "int",
            "values": [
                {
                    "enum": 33071,
                    "label": "ClampToEdge"
                },
                {
                    "enum": 33648,
                    "label": "MirroredRepeat"
                },
                {
                    "enum": 10497,
                    "label": "Repeat"
                }
            ]
        },
        {
            "description": "glTFSampler::wrapT",
            "name": "glTFSamplerWrapT",
            "item": "int",
            "values": [
                {
                    "enum": 33071,
                    "label": "ClampToEdge"
                },
                {
                    "enum": 33648,
                    "label": "MirroredRepeat"
                },
                {
                    "enum": 10497,
                    "label": "Repeat"
                }
            ]
        }
    ],
    "gltf_webgl": "`texParameterf()`"
}
